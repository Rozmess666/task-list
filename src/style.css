html {
    width: 50%;
    height: 100%;
    --color: #E1E1E1;
    background-color: #F3F3F3;
    background-image: linear-gradient(0deg, transparent 24%, var(--color) 25%, var(--color) 26%, transparent 27%,transparent 74%, var(--color) 75%, var(--color) 76%, transparent 77%,transparent),
    linear-gradient(90deg, transparent 24%, var(--color) 25%, var(--color) 26%, transparent 27%,transparent 74%, var(--color) 75%, var(--color) 76%, transparent 77%,transparent);
    background-size: 55px 55px;

}



#taskInput {
    position: absolute;
    max-width: 190px;
    padding: 0.875rem;
    left: 840px;
    top: 238px;
    font-size: 1rem;
    border: 1.5px solid #000;
    border-radius: 0.5rem;
    box-shadow: 2.5px 3px 0 #000;
    outline: none;
    transition: ease 0.25s;
}

#taskInput:focus {
    box-shadow: 5.5px 7px 0 black;
}


.tasksCompleted {
    position: absolute;
    font-family: "Pacifico", cursive;
    font-weight: 400;
    font-style: normal;
    left: 880px;
    top: 294px;
}



.plusButton {
    /* Config start */
    --plus_sideLength: 2.5rem;
    --plus_topRightTriangleSideLength: 0.9rem;
    /* Config end */
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 1px solid white;
    width: var(--plus_sideLength);
    height: var(--plus_sideLength);
    background-color: #000000;
    overflow: hidden;
    /*margin: -2.9rem 0 0 67rem; */
    left: 1067px;
    top: 242px;
}

.plusButton::before {
    position: absolute;
    content: "";
    top: 0;
    right: 0;
    width: 0;
    height: 0;
    border-width: 0 var(--plus_topRightTriangleSideLength) var(--plus_topRightTriangleSideLength) 0;
    border-style: solid;
    border-color: transparent white transparent transparent;
    transition-timing-function: ease-in-out;
    transition-duration: 0.2s;
}

.plusButton:hover {
    cursor: pointer;
}

.plusButton:hover::before {
    --plus_topRightTriangleSideLength: calc(var(--plus_sideLength) * 2);
}

.plusButton:focus-visible::before {
    --plus_topRightTriangleSideLength: calc(var(--plus_sideLength) * 2);
}

.plusButton>.plusIcon {
    fill: white;
    width: calc(var(--plus_sideLength) * 0.7);
    height: calc(var(--plus_sideLength) * 0.7);
    z-index: 1;
    transition-timing-function: ease-in-out;
    transition-duration: 0.2s;
}

.plusButton:hover>.plusIcon {
    fill: black;
    transform: rotate(180deg);
}

.plusButton:focus-visible>.plusIcon {
    fill: black;
    transform: rotate(180deg);
}


.buttonErase {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1em;
    border: 0px solid transparent;
    background-color: rgba(100,77,237,0.08);
    border-radius: 1.25em;
    transition: all 0.2s linear;
    left: 1116px;
    top: 235px;
}

.buttonErase:hover {
    box-shadow: 3.4px 2.5px 4.9px rgba(0, 0, 0, 0.025),
    8.6px 6.3px 12.4px rgba(0, 0, 0, 0.035),
    17.5px 12.8px 25.3px rgba(0, 0, 0, 0.045),
    36.1px 26.3px 52.2px rgba(0, 0, 0, 0.055),
    99px 72px 143px rgba(0, 0, 0, 0.08);
}

.tooltip {
    position: absolute;
    display: inline-block;
}

.tooltip .tooltiptext {
    visibility: hidden;
    width: 4em;
    background-color: rgba(0, 0, 0, 0.253);
    color: #fff;
    text-align: center;
    border-radius: 6px;
    padding: 10px 40px 10px 10px;
    position: absolute;
    z-index: 1;
    top: 25%;
    left: 110%;
}

.tooltip .tooltiptext::after {
    content: "";
    position: absolute;
    top: 50%;
    right: 100%;
    margin-top: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: transparent rgba(0, 0, 0, 0.253) transparent transparent;
}

.tooltip:hover .tooltiptext {
    visibility: visible;
}


#containerWrapper {
    grid-area: main-content;
}



.checkbox {
    display: flex;
    align-items: center;
}
/*
.checkbox-wrapper input[type="checkbox"] {
    visibility: hidden;
    display: none;
}
*/

.checkbox-wrapper *,
.checkbox-wrapper ::after,
.checkbox-wrapper ::before {
    box-sizing: border-box;
    user-select: none;
}

.checkbox-wrapper {
    position: relative;
    display: block;
    overflow: hidden;
    top: 330px;
    left: 820px;

}

.checkbox-wrapper .label {
    cursor: pointer;
}

.checkbox-wrapper .check {
    width: 50px;
    height: 50px;
    position: absolute;
    opacity: 0;
}

.checkbox-wrapper .label svg  {
    vertical-align: middle;
}

.checkbox-wrapper .path1 {
    stroke-dasharray: 400;
    stroke-dashoffset: 400;
    transition: 0.5s stroke-dashoffset;
    opacity: 1;
}

.checkbox-wrapper .check:checked + label svg g path {
    stroke-dashoffset: 0;
    opacity: 1;
}

.taskName {
    font-family: "Pacifico", cursive;
    font-weight: 300;
    font-style: normal;
    font-size: 30px;
}

